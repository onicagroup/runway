---
stages:
  - test
  # build is only run for PRs, tags, or if fork is configured.
  # PRs skip uploading artifacts since we just want to ensure
  # they can be properly built.
  - name: build
    if: |
      type == pull_request OR \
      tag IS present OR \
      env(FORKED) == true
  - name: deploy
    if: tag IS present OR env(FORKED) == true

language: python  # this works for Linux but is an error on macOS or Windows

jobs:
  include:
    - name: "Python 2.7 Compatibility Test"
      stage: test
      python: 2.7
      env: PIP=pip PYTHON_VERSION=2.7
      script: make travistest clean
    - name: "Python 3.5 Compatibility Test"
      stage: test
      python: 3.5
      env: PIP=pip3 PYTHON_VERSION=3.5
      script: make travistest clean
    - name: "Python 3.6 Compatibility Test"
      stage: test
      python: 3.6
      env: PIP=pip3 PYTHON_VERSION=3.6
      script: make travistest clean
    - name: "Python 3.7 Compatibility Test"
      stage: test
      python: 3.7
      env: PIP=pip3 PYTHON_VERSION=3.7
      script: make travistest clean
    - name: "Python 3.7 Linux Single Binary Build"
      stage: build
      python: 3.7
      env: PIP=pip3 PYTHON_VERSION=3.7 DEPLOY=true
      script: make travisbuild_file
    - name: "Python 3.7 macOS Single Binary Build"
      stage: build
      os: osx
      osx_image: xcode11  # Python 3.7.4 running on macOS 10.14.4
      language: shell  # 'language: python' is an error on Travis CI macOS
      env: PIP=pip3 PYTHON_VERSION=3.7 DEPLOY=true
      script: make travisbuild_file
    - name: "Python 3.7 Windows Single Binary Build"
      stage: build
      os: windows  # Windows 10.0.17134 N/A Build 17134
      language: shell  # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version=3.7.4
        - choco install make sed pandoc jq
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH PIP=pip3 PYTHON_VERSION=3.7 DEPLOY=true
      script: make travisbuild_file
    - name: "Python 3.7 Linux npm Build"
      stage: build
      python: 3.7
      env: PIP=pip3 PYTHON_VERSION=3.7 DEPLOY=true
      script: make travisbuild_folder
    - name: "Python 3.7 macOS npm Build"
      stage: build
      os: osx
      osx_image: xcode11  # Python 3.7.4 running on macOS 10.14.4
      language: shell  # 'language: python' is an error on Travis CI macOS
      env: PIP=pip3 PYTHON_VERSION=3.7 DEPLOY=true
      script: make travisbuild_folder
    - name: "Python 3.7 Windows npm Build"
      stage: build
      os: windows  # Windows 10.0.17134 N/A Build 17134
      language: shell  # 'language: python' is an error on Travis CI Windows
      before_install:
        - choco install python --version=3.7.4
        - choco install make sed pandoc jq
      env: PATH=/c/Python37:/c/Python37/Scripts:$PATH PIP=pip3 PYTHON_VERSION=3.7 DEPLOY=true
      script: make travisbuild_folder
    - name: Publish
      stage: deploy
      python: 3.7
      env: PIP=pip3 PYTHON_VERSION=3.7 PUBLISH=true
      script:
        # wrapped in if statement so it does not fail the build if env vars are not set yet
        - |
          if [ ! -z "${AWS_ACCESS_KEY_ID}" ]; then
            pip install awscli
            mkdir -p src
            make npm_prep
            aws s3 sync s3://${AWS_BUCKET}/${AWS_BUCKET_PREFIX}/$(cat tmp/version.txt)/npm ./src/
          else
            echo "Unable to find the required environment variable."
            exit 0
          fi

addons:
  apt:
    packages:
      - pandoc
      - sed
  homebrew:
    packages:
      - pandoc
      - jq

install:
  - ./.travis/install.sh

deploy:
  # used more for build artifact storage than "deploying"
  - provider: s3
    edge: true  # https://travis-ci.community/t/aws-s3-deploy-fails-to-run/5297/5
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: $AWS_BUCKET
    skip_cleanup: true
    acl: public_read
    region: $AWS_DEFAULT_REGION
    local-dir: "artifacts/"
    upload-dir: $AWS_BUCKET_PREFIX
    on:
      # This condition allows for onicagroup/runway to only supply AWS environment
      # variables on select branches that should be used for deployment of build
      # artifacts.
      # Forks are welcome to set these environment variables in their own travis-ci
      # environment to use their own AWS account during development. Forks that
      # wish to use this must create and environment variable "FORKED=true".
      all_branches: true
      condition: $DEPLOY = true && ${AWS_ACCESS_KEY_ID:?} && ${AWS_SECRET_ACCESS_KEY:?} && ("${TRAVIS_TAG:-undefined}" != "undefined" || ${FORKED} = true)

  - provider: npm
    email: $NPM_EMAIL
    api_key: $NPM_API_KEY
    skip_cleanup: true
    on:
      # This condition allows for onicagroup/runway to only supply AWS environment
      # variables on select branches that should be used for deployment of build
      # artifacts.
      # Forks are welcome to set these environment variables in their own travis-ci
      # environment to use their own AWS account during development. Forks that
      # wish to use this must create an environment variable "FORKED=true".
      all_branches: true
      condition: $PUBLISH = true && ${AWS_ACCESS_KEY_ID:?} && ${AWS_SECRET_ACCESS_KEY:?} && ${NPM_API_KEY:?}
