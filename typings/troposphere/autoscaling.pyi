"""
This type stub file was generated by pyright.
"""

from . import AWSHelperFn, AWSObject, AWSProperty

EC2_INSTANCE_LAUNCH = "autoscaling:EC2_INSTANCE_LAUNCH"
EC2_INSTANCE_LAUNCH_ERROR = "autoscaling:EC2_INSTANCE_LAUNCH_ERROR"
EC2_INSTANCE_TERMINATE = "autoscaling:EC2_INSTANCE_TERMINATE"
EC2_INSTANCE_TERMINATE_ERROR = "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
TEST_NOTIFICATION = "autoscaling:TEST_NOTIFICATION"
Default = "Default"
OldestInstance = "OldestInstance"
NewestInstance = "NewestInstance"
OldestLaunchConfiguration = "OldestLaunchConfiguration"
OldestLaunchTemplate = "OldestLaunchTemplate"
ClosestToNextInstanceHour = "ClosestToNextInstanceHour"
AllocationStrategy = "AllocationStrategy"

class Tag(AWSHelperFn):
    def __init__(self, key, value, propogate) -> None: ...

class Tags(AWSHelperFn):
    defaultPropagateAtLaunch = ...
    manyType = ...
    def __init__(self, **kwargs) -> None: ...
    def __add__(self, newtags): ...
    def to_dict(self): ...

class LifecycleHookSpecification(AWSProperty):
    props = ...

class NotificationConfigurations(AWSProperty):
    props = ...

class MetricsCollection(AWSProperty):
    props = ...

class Metadata(AWSHelperFn):
    def __init__(self, init, authentication=...) -> None: ...
    def validate(self, init, authentication): ...

class LaunchTemplateSpecification(AWSProperty):
    props = ...
    def validate(self): ...

class InstancesDistribution(AWSProperty):
    props = ...

class LaunchTemplateOverrides(AWSProperty):
    props = ...

class LaunchTemplate(AWSProperty):
    props = ...

class MixedInstancesPolicy(AWSProperty):
    props = ...

class AutoScalingGroup(AWSObject):
    resource_type = ...
    props = ...
    def validate(self): ...

class LaunchConfiguration(AWSObject):
    resource_type = ...
    props = ...

class StepAdjustments(AWSProperty):
    props = ...

class MetricDimension(AWSProperty):
    props = ...

class CustomizedMetricSpecification(AWSProperty):
    props = ...

class PredefinedMetricSpecification(AWSProperty):
    props = ...

class TargetTrackingConfiguration(AWSProperty):
    props = ...

class ScalingPolicy(AWSObject):
    resource_type = ...
    props = ...

class ScheduledAction(AWSObject):
    resource_type = ...
    props = ...

class LifecycleHook(AWSObject):
    resource_type = ...
    props = ...

class Trigger(AWSObject):
    resource_type = ...
    props = ...

class EBSBlockDevice(AWSProperty):
    props = ...

class BlockDeviceMapping(AWSProperty):
    props = ...
